#ifndef DEFINESIMAGESANDSOUNDS_h
#define DEFINESIMAGESANDSOUNDS_h
#include <Arduboy.h>

#define FPSDELAY      1000/30
#define BUTTONCD      200
#define GameSeeds     4
#define TileSize      8
#define MinLevelWidth 12

#define RoomFeatures  3
#define RoomWidth     16
#define RoomHeight    16
#define RoomBytes     (RoomHeight/8) * RoomWidth
#define MapRooms      3
#define MapObjects    30
#define SpriteCap     10
#define SpawnY        64

#define POINTSMushroom  100
#define POINTSKill      20

PROGMEM const unsigned char gameover [] = {
0xff, 0x80, 0x0, 0x3f, 0xc3, 0xfc, 0x7, 0xf8, 0x0, 0x80, 0xff, 0xff, 0xe0, 0x42, 0x7, 0xfc, 0xf, 0xf0, 0x80, 0x83, 0x0, 0x20, 0x42, 0x4, 0x4c, 0x8, 0x10, 0x80, 0x83, 0x0, 0x24, 0x42, 0x4, 0x4c, 0x88, 0x10, 0x8f, 0xf3, 0x0, 0x24, 0x42, 0x64, 0x4c, 0x88, 0x10, 0x89, 0x3, 0x23, 0x20, 0x42, 0x64, 0x4c, 0x9, 0x90, 0x89, 0x3, 0x23, 0x20, 0x42, 0x64, 0x4c, 0x9, 0x90, 0x89, 0x3, 0x23, 0x20, 0x42, 0x64, 0x4c, 0x9, 0xf0, 0x89, 0x13, 0x23, 0x21, 0xc2, 0x64, 0x4c, 0x39, 0x0, 0x89, 0x13, 0x23, 0x27, 0xc2, 0x4, 0xc, 0xf9, 0x0, 0x81, 0x3, 0x23, 0x20, 0x42, 0x4, 0xc, 0x9, 0x0, 0x81, 0x3, 0x23, 0x20, 0x42, 0x6, 0xc, 0x9, 0x0, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xfd, 0xf7, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
};

enum SpriteDataLayout {
  SpriteWidth = 0,
  SpriteHeight,
  SpriteMaxFrame,
  SpriteFlags,
  SpriteSpeed,
  SpriteIntelligence,
  SpriteMasks,
  SpriteImageData
};

PROGMEM const unsigned char SmallSquarioSprite[] {
  8, 8, 1, 0, // Width, Height, # of Frames, Flags
  0, 0,       // Speed, AI Setting
  1,          // Number of masks
  0b01100000, // Frame 1 Data
  0b00100000,
  0b11111111,
  0b01100011,
  0b01100111,
  0b11110011,
  0b01011111,
  0b01001010,
  
  0b01100000, // Frame 1 Mask
  0b00100000,
  0b11111111,
  0b01111111,
  0b01111111,
  0b11111111,
  0b01011111,
  0b01001010,

};
PROGMEM const unsigned char BigSquarioSprite[] {
  8, 16, 1, 0,  // Width, Height, # of Frames, Flags
  0, 0,         // Speed, AI Setting
  1,          // Number of masks
  0b00000000, // Frame 1 data
  0b00011000,
  0b11111111,
  0b10000011,
  0b10101011,
  0b10100011,
  0b01111111,
  0b00010010,
  0b00000111,
  0b00000001,
  0b11111111,
  0b10011110,
  0b00011111,
  0b11111110,
  0b10000001,
  0b00000111,
  
  0b00000000, // Frame 1 mask
  0b00011000,
  0b11111111,
  0b11111111,
  0b11111111,
  0b11111111,
  0b01111111,
  0b00010010,
  0b00000111,
  0b00000001,
  0b11111111,
  0b10011111,
  0b00011111,
  0b11111111,
  0b10000001,
  0b00000111
};
PROGMEM const unsigned char TriangleoSprite[] {
  8, 8, 1,    // Width, Height, # of Frames
  0b10,       // Flags
  1, 0b11,    // Speed, AI Setting
  1,          // Number of masks
  0b00011000, // Frame 1 data
  0b10100100,
  0b11101110,
  0b01100101,
  0b01101101,
  0b11100110,
  0b10100100,
  0b00011000,
  
  0b00011000, // Frame 1 mask
  0b10111100,
  0b11111110,
  0b01111111,
  0b01111111,
  0b11111110,
  0b10111100,
  0b00011000
};
PROGMEM const unsigned char StarmanoSprite[] {
  8, 8, 1,    // Width, Height, # of Frames
  0b10,       // Flags
  2, 0b1111,  // Speed, AI Setting
  0,          // Number of masks
  0b00111100, // Frame 1 data
  0b01000010,
  0b10101101,
  0b10100001,
  0b10101101,
  0b11000010,
  0b01011100,
  0b01101000,
};
PROGMEM const unsigned char SmileoSprite[] {
  8, 8, 1,    // Width, Height, # of Frames
  0b10,       // Flags
  2, 0b1,     // Speed, AI Setting
  1,          // Number of masks
  0b00001110, // Frame 1 data
  0b11000101,
  0b11111111,
  0b01101000,
  0b01010100,
  0b11101010,
  0b11010100,
  0b01111000,
  
  0b00001110, // Frame 1 Mask 
  0b11000111,
  0b11111111,
  0b01111000,
  0b01111100,
  0b11111110,
  0b11111100,
  0b01111000

};
PROGMEM const unsigned char MushroomSprite[] {
  8, 8, 1,    // Width, Height, # of Frames
  0b10,       // Flags
  1, 0b1,     // Speed, AI Setting
  1,          // Number of masks
  0b00011100, // Frame 1 data
  0b01011010,
  0b10111001,
  0b10010111,
  0b10110111,
  0b10011001,
  0b01111010,
  0b00011100,
  
  0b00011100, // Frame 1 mask
  0b01011110,
  0b11111111,
  0b11111111,
  0b11111111,
  0b11111111,
  0b01111110,
  0b00011100
};

PROGMEM const unsigned char BoltSprite[] {
  16, 16, 1,  // Width, Height, # of Frames
  0b11,       // Flags
  2, 0,       // Speed, AI Setting
  1,          // Number of masks

  0b00000000, // Frame 1 data
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b10000000,
  0b01010000,
  0b00101000,
  0b00000110,
  0b00000001,
  0b01000001,
  0b11100010,
  0b00100010,
  0b00010100,
  0b00001100,
  0b00001000, 
  0b10000000, // row2
  0b01000000,
  0b01110000,
  0b00101000,
  0b00100101,
  0b00010010,
  0b00001000,
  0b00001110,
  0b00000110,
  0b00000001,
  0b00000001,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  
  0b00000000, // Mask 1 data
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b10000000,
  0b11010000,
  0b11101000,
  0b11111110,
  0b11111111,
  0b01111111,
  0b11111110,
  0b00111110,
  0b00011100,
  0b00001100,
  0b00001000, 
  
  0b10000000, // row2
  0b01000000,
  0b01110000,
  0b00111000,
  0b00111101,
  0b00011111,
  0b00001111,
  0b00001111,
  0b00000111,
  0b00000001,
  0b00000001,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
};

PROGMEM const unsigned char tHammer[] = {
  0b00000000,
  0b00001111,
  0b00001001,
  0b11111001,
  0b11111001,
  0b00001001,
  0b00001111,
  0b00000000
};
PROGMEM const unsigned char tHammer0[] = {
0b00100000,
0b01010000,
0b10001000,
0b00000100,
0b10000010,
0b01000001,
0b10100010,
0b01010100,
0b10001000,
0b00000000,
0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,

0b00000000,
0b00000000,
0b00000000,
0b00000001,
0b00000000,
0b00000000,
0b00000000,
0b00000001,
0b00000010,
0b00000101,
0b00000110,
//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000 
};
PROGMEM const unsigned char tHammer1[] = {
0b00011111,
0b00010001,
0b00010001,
0b11110001,
0b11110001,
0b00010001,
0b00010001,
0b00011111,

0b00000000,
0b00000000,
0b00000000,
0b00000111,
0b00000111,
0b00000000,
0b00000000,
0b00000000
};
PROGMEM const unsigned char tHammer2[] = {
//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
0b00000000,
0b00000000,
0b10001000,
0b01010100,
0b10100010,
0b01000001,
0b10000010,
0b00000100,
0b10001000,
0b01010000,
0b00100000,

//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
0b00000110,
0b00000101,
0b00000010,
0b00000001,
0b00000000,
0b00000000,
0b00000000,
0b00000001,
0b00000000,
0b00000000,
0b00000000
};
PROGMEM const unsigned char tHammer3[] = {
0b00011000,
0b00011000,
0b00011000,
0b00011000,
0b00011000,
0b00011000,
0b11111111,
0b10000001,
0b10000001,
0b10000001,
0b11111111
};
PROGMEM const unsigned char tHammer3m[] {
0b11111111,
0b10000001,
0b10000001,
0b10000001,
0b11111111,
0b00011000,
0b00011000,
0b00011000,
0b00011000,
0b00011000,
0b00011000
};
PROGMEM const unsigned char tHammer4[] = {
//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
0b01100000,
0b10100000,
0b01000000,
0b10000000,
0b00000000,
0b00000000,
0b00000000,
0b10000000,
0b00000000,
0b00000000,
0b00000000,

//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
0b00000000,
0b00000000,
0b00010001,
0b00101010,
0b01000101,
0b10000010,
0b01000001,
0b00100000,
0b00010001,
0b00001010,
0b00000100
};
PROGMEM const unsigned char tHammer4m[] = {
0b00000000,
0b00000000,
0b00000000,
0b10000000,
0b00000000,
0b00000000,
0b00000000,
0b10000000,
0b01000000,
0b10100000,
0b01100000,
//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,

0b00000100,
0b00001010,
0b00010001,
0b00100000,
0b01000001,
0b10000010,
0b01000101,
0b00101010,
0b00010001,
0b00000000,
0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
//0b00000000,
};

PROGMEM const unsigned char tMask[] = { 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF };
PROGMEM const unsigned char tBrick[] = { 0xFF,0xA9,0xA9,0xB9,0xA9,0xEF,0xA9,0xFF };	// 3	Empty
PROGMEM const unsigned char tQBlock[] = { 0xFF,0x81,0x85,0xB5,0x95,0x9D,0x81,0xFF };
PROGMEM const unsigned char tBQBlock[] =		{ 0xFF,0x81,0xA5,0x81,0x81,0xA5,0x81,0xFF };	// 9

PROGMEM const unsigned char tPipeLeft[] = 		{ 0x00,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00 };	// 4
PROGMEM const unsigned char tPipeRight[] = 		{ 0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00 };	// 5
PROGMEM const unsigned char tPipeCapLeft[] = 	{ 0xFF,0x81,0x81,0xFD,0x81,0x81,0x81,0x81 };	// 6
PROGMEM const unsigned char tPipeCapRight[] = { 0x81,0x81,0x81,0x81,0x81,0x81,0x81,0xFF };	// 7
// 96x32
PROGMEM const unsigned char Titular [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x03, 
0xE0, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7F, 0xF3, 0xE0, 0x0F, 
0xF8, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0xFC, 0xF1, 0xE1, 0x8F, 
0xFE, 0x1F, 0xE7, 0xDF, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0xF8, 0x61, 0xE3, 0xCF, 
0x1F, 0x3F, 0xC7, 0x83, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0xF8, 0x01, 0xE3, 0xCF, 
0x07, 0x3E, 0x07, 0x83, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7C, 0x01, 0xE3, 0xEF, 
0x07, 0x38, 0x07, 0x87, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x1E, 0x01, 0xE3, 0xEF, 
0x0F, 0x3C, 0x07, 0x8F, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x07, 0x81, 0xE3, 0xEF, 
0x1E, 0x7F, 0xC3, 0xFF, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x03, 0xE1, 0xE3, 0xEF, 
0xFE, 0x7F, 0xC3, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x01, 0x83, 0xF1, 0xE3, 0xCF, 
0xFC, 0x78, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0xE7, 0xF1, 0xC7, 0xCF, 
0xF8, 0x7C, 0x03, 0x9E, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x01, 0xFF, 0xF1, 0xFF, 0x8F, 
0xF0, 0x3C, 0x03, 0xCF, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0xFF, 0xE1, 0xFF, 0x8F, 
0x00, 0x3F, 0xE3, 0xC7, 0xC0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0xFF, 0x0F, 
0x00, 0x1F, 0xE3, 0xC7, 0xC0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x0F, 
0x00, 0x1F, 0xE3, 0xE3, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x3F, 0x07, 0x80, 0x7C, 0x00, 0xFF, 
0x80, 0x00, 0x38, 0x00, 0x00, 0x3E, 0x00, 0x00, 
0x00, 0x00, 0x3F, 0x0F, 0x80, 0xFE, 0x01, 0xFF, 
0xC0, 0x00, 0x38, 0x00, 0x00, 0x7F, 0xC0, 0x00, 
0x00, 0x00, 0x3F, 0x9F, 0x81, 0xFE, 0x03, 0xFF, 
0xE0, 0x00, 0x38, 0x00, 0x00, 0xFF, 0xC0, 0x00, 
0x00, 0x00, 0x7F, 0x9F, 0xC1, 0xFF, 0x03, 0xEF, 
0xF8, 0x00, 0x7C, 0x00, 0x01, 0xFF, 0xE0, 0x00, 
0x00, 0x00, 0x7F, 0xBF, 0xC3, 0xFF, 0x03, 0xC3, 
0xF8, 0x00, 0x7C, 0x00, 0x07, 0xFF, 0xF0, 0x00, 
0x00, 0x00, 0xFF, 0xFF, 0xC7, 0xFF, 0x03, 0xC0, 
0xF7, 0xC0, 0x7C, 0x18, 0x37, 0xFF, 0xF8, 0x00, 
0x00, 0x00, 0xFF, 0xFF, 0xE7, 0x9F, 0x83, 0xC0, 
0x7B, 0xC3, 0x7C, 0x3C, 0x7B, 0xF7, 0xFC, 0x00, 
0x00, 0x01, 0xFF, 0xFF, 0xEF, 0x0F, 0x83, 0xC0, 
0x7B, 0xC7, 0xBE, 0x7C, 0xFB, 0xE0, 0xFE, 0x00, 
0x00, 0x01, 0xFF, 0xFF, 0xEF, 0x07, 0x83, 0xC1, 
0xFB, 0xC7, 0xBE, 0x7E, 0xFB, 0xC0, 0x7E, 0x00, 
0x00, 0x03, 0xFF, 0xFF, 0xEE, 0x07, 0x83, 0xC1, 
0xFB, 0xC7, 0xDE, 0x7E, 0xF7, 0x80, 0x7E, 0x00, 
0x00, 0x03, 0xF7, 0xFF, 0xE6, 0x07, 0xC3, 0xF3, 
0xFB, 0xC7, 0xDE, 0xFF, 0xF7, 0x80, 0x7E, 0x00, 
0x00, 0x07, 0xF3, 0xE7, 0xF7, 0xC7, 0xC3, 0xFF, 
0xF3, 0xC7, 0xDE, 0xFF, 0xF7, 0xC0, 0x7E, 0x00, 
0x00, 0x07, 0xE3, 0xC3, 0xF3, 0xFF, 0xC3, 0xFF, 
0xE3, 0xC7, 0xDD, 0xFF, 0xF7, 0xE0, 0x7E, 0x00, 
0x00, 0x0F, 0xE1, 0xC3, 0xF3, 0xFF, 0xC3, 0xFF, 
0x83, 0xC7, 0xBD, 0xF7, 0xEF, 0xF1, 0xFE, 0x00, 
0x00, 0x0F, 0xC0, 0x01, 0xFB, 0xFF, 0xC3, 0xEF, 
0xC3, 0x8F, 0xBD, 0xE7, 0xEF, 0xFF, 0xFE, 0x00, 
0x00, 0x0F, 0xC0, 0x01, 0xF9, 0xFF, 0xE3, 0xEF, 
0xE3, 0xFF, 0x7D, 0xE7, 0xE7, 0xFF, 0xFC, 0x00, 
0x00, 0x1F, 0xC0, 0x00, 0xF8, 0x0F, 0xE3, 0xE3, 
0xF3, 0xFF, 0x7E, 0xC3, 0xC3, 0xFF, 0xFC, 0x00, 
0x00, 0x3F, 0x80, 0x00, 0xF8, 0x07, 0xE3, 0xE3, 
0xFD, 0xFE, 0x7F, 0x01, 0x81, 0xFF, 0xF8, 0x00, 
0x00, 0x3F, 0x80, 0x00, 0xFC, 0x07, 0xE3, 0xE1, 
0xFC, 0x00, 0x7F, 0x00, 0x00, 0xFF, 0xF8, 0x00, 
0x00, 0x7F, 0x00, 0x00, 0xFC, 0x07, 0xF3, 0xE0, 
0xFC, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0xF0, 0x00, 
0x00, 0x3E, 0x00, 0x00, 0x78, 0x07, 0xF3, 0xC0, 
0x78, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0xF9, 0xF0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x01, 0xB0, 0xD8, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x18, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x03, 0xCF, 0x3C, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x03, 0xDF, 0xBC, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x03, 0x9F, 0x9C, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x02, 0x7F, 0xE4, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x03, 0xC9, 0x3C, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x01, 0x89, 0x18, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x10, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x10, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x30, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xE0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};


PROGMEM const byte Verse [] = {
0x90,47, 0,170, 
0x80, 0,170, 
0x90,47, 0,170, 
0x80,
0x90,54, 0,170,
0x80, 0,170,
0x90,54, 0,170,
0x80,
0x90,50, 0,170,
0x80, 0,170,
0x90,50, 0,170,
0x80,
0x90,52, 0,170,
0x80, 0,170, 
0x90,52, 0,170,
0x80,
0x90,52, 0,170,
0x80, 0,170,
0x90,52, 0,170,
0x80, 0,170,
0xf0};
PROGMEM const byte PreChorus [] = {
0x90,47, 0,85, 0x80, 0,85, 0x90,45, 0,170, 0x80, 0,170, 0x90,47, 0,170, 0x80, 1,84, 
0x90,61, 0,170, 0x80, 0,170, 0x90,61, 0,170, 0x80, 0x90,61, 0,170, 0x80, 0x90,61, 0,170, 
0x80, 0x90,61, 0,170, 0x80, 0x90,62, 0,170, 0x80, 0x90,59, 1,84, 0x80, 0xf0};
PROGMEM const byte Chorus [] = {
0x90,64, 0,227, 0x80, 0,227, 0x90,64, 0,227, 0x80, 0,227, 0x90,62, 3,141, 0x80, 0x90,62, 
0,227, 0x80, 0,227, 0x90,62, 0,227, 0x80, 0,227, 0x90,61, 3,141, 0x80, 0x90,62, 0,227, 
0x80, 0,227, 0x90,62, 0,227, 0x80, 0,227, 0x90,61, 3,141, 0x80, 0x90,61, 0,227, 0x80, 0,227, 
0x90,61, 0,227, 0x80, 0,227, 0x90,59, 3,141, 0x80, 0xf0};
#define nG3S         415  // 0x01
#define nA3          440  // 0x02
#define nB3          494  // 0x03
#define nC4          523  // 0x04
#define nD4          587  // 0x05
#define nE4          659  // 0x06
#define nG4S         831  // 0x07
#define nA4          880  // 0x08
#define nB4          988  // 0x09
#define nC5          1047  // 0x0A
#define nD5          1175  // 0x0B
#define nE5          1319  // 0x0C
#define nF5          1397  // 0x0D
#define nG5          1568  // 0x0E
#define nA5          1760  // 0x0F

#define nA4S         932

#define nB1          123  // 0x1
#define nD2          147  // 0x2
#define nF2          175  // 0x3
#define nA2          220  // 0x4
#define nD3          294  // 0x5
#define nB5          1975 // 0xF
#define nC5S         1109 // 0x9
#define nD5S         1245 // 0xB
#define nC6          2094 // 0xD
#define nE6          2638 // 0xE
PROGMEM const unsigned int SFXFrequencies [] {
  nB1, nD2, nF2,
  nA2, nD3, nA3, nD4,
  nC5, nC5S, nD5, nD5S, nE5,
  nC6, nE6, nB5
};
PROGMEM const byte SFX_Hit [] = { 0, 16, 0xC1, 0xB1, 0xA1, 0x91, 0xFF };
PROGMEM const byte SFX_Jump [] = { 0, 16, 0x21, 0x11, 0x31, 0x21, 0xFF };
PROGMEM const byte SFX_Mushroom [] = { 0, 64, 0x41, 0x41, 0x51, 0x51, 0x61, 0x61, 0x71, 0x71, 0xFF };
PROGMEM const byte SFX_Coin [] = { 0, 16, 0xF1, 0xE4, 0xFF };
PROGMEM const byte SFX_Life [] = { 0, 32, 0xE3, 0xD3, 0xE3, 0xD3, 0xC5, 0x85, 0xFF };
#endif
